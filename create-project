#!/usr/bin/env python3

from datetime import datetime

from os import system, path, name, mkdir
from sys import argv, stderr

from pathlib import Path

from src.content import *
from src.utils import *


def main():

    project_path = ''
    try:
        project_path = argv[1]
    except IndexError:
        print('[X] Enter name', file=stderr)
        exit(-1)

    if not is_camel_case(project_path):
        print(f'"{project_path}" is not CamelCase', file=stderr)
        exit(-1)

    try:
        mkdir(project_path)
    except FileExistsError:
        print(f'[X] Project <{project_path}> exists', file=stderr)
        exit(-1)

    script_name = get_script_name(path.basename(project_path))
    github_nickname = 'Pendosv'

    dirs = ['test', 'src']
    files = (
        ('.gitignore', gitignore),
        ('README.md',
         readme_md.format(project_path=project_path, github_nickname=github_nickname, script_name=script_name)),
        (script_name, main_py),
        ('requirements.txt', ''),
        ('LICENSE', license_.format(year=datetime.now().year, github_nickname=github_nickname)),
        (path.join(dirs[0], 'tests.py'), tests_py),
        (path.join(dirs[1], 'utils.py'), utils_py)
    )

    make_dirs(project_path, dirs)
    write_files(project_path, files)

    system(f'virtualenv {path.join(project_path, "venv")}')  # виртуальное окружение

    if name == 'posix':
        system(f'chmod u+x {path.join(project_path, script_name)}')  # разрешение на запуск

    if '--link' in argv:
        home_path = str(Path.home())
        home_bin = path.join(home_path, 'bin')

        # если существует папка /home/user/bin
        if path.exists(home_bin) and path.isdir(home_bin):
            # создает символическую ссылку в /home/user/bin
            system(f'ln -s {path.abspath(path.join(project_path, script_name))} {home_bin}')


if __name__ == '__main__':
    main()
